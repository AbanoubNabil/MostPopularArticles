//
//  NYTMostViewdArticlesInteractor.swift
//  MostPopularArticles
//
//  Created Abanoub Nabil on 12/3/20.
//  Copyright © 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class NYTMostViewdArticlesInteractor {
	
    weak var presenter: NYTMostViewdArticlesPresenterProtocol?
	let service = NYTimesNewsService()
}

// MARK: - Presenter To Interactor Protocol

extension NYTMostViewdArticlesInteractor: NYTMostViewdArticlesInteractorProtocol {
	func fetchRequestsHistory() {
		apiService.fetchRequestsHistory { [weak self] response in
			DispatchQueue.main.async {
				switch response {
				case let .success(parsedResponse):
					print(parsedResponse)
					if parsedResponse.code == 200, let history = parsedResponse.data {
						self?.presenter.historyFetchSuccessful(history)
					} else {
						self?.presenter?.historyFetchFailure(error: EAError.customBackendError(message: parsedResponse.message ?? ""))
					}
				case let .failure(error):
					if let error = error as? EAError {
						switch error {
						case .authentication:
							self?.presenter.sessionExpired()
						default:
							self?.presenter?.historyFetchFailure(error: error)
						}
					} else {
						self?.presenter?.historyFetchFailure(error: error)
					}
				}
			}
		}
	}
}
